openapi: 3.0.1
info:
  title: Sygna HUB
  description: Sygna Hub API
  contact: {}
  version: 1.16.1
servers:
  - url: /
paths:
  /:
    get:
      tags:
        - self
      summary: 'get current release, version the path could be used for health check'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/schema.GetRootOutput'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
  /currencies:
    get:
      tags:
        - currencies
      summary: get supported currencies
      operationId: GetCurrencies
      parameters:
        - name: currency_id
          in: query
          description: filter currencies by currency identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: currency_symbol
          in: query
          description: filter currencies data by currency symbol
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: currency_name
          in: query
          description: filter currencies data by currency name
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: kyt_provider
          in: query
          description: filter currencies data by kyt providers
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: is_active
          in: query
          description: filter currencies by if status is activated
          style: form
          explode: false
          schema:
            type: array
            items:
              type: boolean
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.Currency'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /customers:
    get:
      tags:
        - customers
      summary: get customers
      parameters:
        - name: id
          in: query
          description: filter customers by customer identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          description: filter customers by customer name
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: is_active
          in: query
          description: filter customers by if status is activated
          style: form
          explode: false
          schema:
            type: array
            items:
              type: boolean
        - name: risk_score_provider
          in: query
          description: filter customers by risk score provider
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Elliptic
                - Chainalysis V1
                - Chainalysis V2
                - Merkle Science
                - Dow Jones
                - Coinfirm
        - name: max_risk_score
          in: query
          description: 'A URL parameter that specifies the range of max risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: avg_risk_score
          in: query
          description: 'A URL parameter that specifies the range of average risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: label
          in: query
          description: filter customers by labels from KYT service searched
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: last_screened
          in: query
          description: 'filter customers by a range of last screened date(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/schema.GetCustomersOutput'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    put:
      tags:
        - customers
      summary: update customers
      requestBody:
        description: put /customers params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PutCustomersInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
    post:
      tags:
        - customers
      summary: create customers
      requestBody:
        description: post /customers params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostCustomersInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
    patch:
      tags:
        - customers
      summary: update customers
      requestBody:
        description: patch /customers params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchCustomersInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /customers-export:
    get:
      tags:
        - customers-export
      summary: generate customers report
      parameters:
        - name: id
          in: query
          description: filter customers by customer identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          description: filter customers by customer name
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: is_active
          in: query
          description: filter customers by if status is activated
          style: form
          explode: false
          schema:
            type: array
            items:
              type: boolean
        - name: risk_score_provider
          in: query
          description: filter customers by risk score provider
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Elliptic
                - Chainalysis V1
                - Chainalysis V2
                - Merkle Science
                - Dow Jones
                - Coinfirm
        - name: max_risk_score
          in: query
          description: 'A URL parameter that specifies the range of max risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: avg_risk_score
          in: query
          description: 'A URL parameter that specifies the range of average risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: label
          in: query
          description: filter customers by labels from KYT service searched
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: last_screened
          in: query
          description: 'filter customers by a range of last screened date(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /customers-export/download:
    get:
      tags:
        - customers-export
      summary: download customer report
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /customers-export/status:
    get:
      tags:
        - customers-export
      summary: get customer report processing status
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/model.Report'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  '/customers/{id}':
    get:
      tags:
        - customers
      summary: get specific customer detail
      parameters:
        - name: id
          in: path
          description: customer identifier
          required: true
          schema:
            type: string
        - name: asset_id
          in: query
          description: filter asset by ids in current customer
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: asset_currency_id
          in: query
          description: filter asset by currency id in current customer
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: asset_risk_score
          in: query
          description: filter asset by risk score in current customer
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: asset_address
          in: query
          description: filter asset by address in current customer
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: asset_label
          in: query
          description: filter asset by label in current customer
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: asset_value
          in: query
          description: filter asset by value in current customer
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: asset_last_screened
          in: query
          description: filter asset by last screen time in current customer
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/schema.GetCustomerOutput'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /data-transfer-export:
    get:
      tags:
        - data-transfer-export
      summary: generate transaction report
      parameters:
        - name: id
          in: query
          description: filter transactions by transaction identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          description: filter transactions by customer name
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: address
          in: query
          description: filter transactions by transaction address
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: tx_id
          in: query
          description: filter transactions by transaction id on blockchain
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: currency_id
          in: query
          description: filter transactions by transaction currency id
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: last_screened
          in: query
          description: 'filter transactions by a range of last screened(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: risk_score_provider
          in: query
          description: filter transactions by risk score provider
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: risk_score
          in: query
          description: 'A URL parameter that specifies the range of risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: status
          in: query
          description: 'filter transactions by transaction status(0:Processing,1:Blocked,2:Pending On Beneficiary,3:Transfer To Beneficiary Failed,4:Pending On Originator,5:Transfer To Originator Failed,6:Confirmed,7:Confirm Failed,8:Rejected)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: status_text
          in: query
          description: filter transactions by transaction status text
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Processing
                - Blocked
                - Pending On Beneficiary
                - Transfer To Beneficiary Failed
                - Pending On Originator
                - Transfer To Originator Failed
                - Confirmed
                - Confirm Failed
                - Rejected
        - name: value
          in: query
          description: 'A URL parameter that specifies the range of value. This format should be {from,to} (ie.value=0.1,10.5 means filtering transactions by value between 0.1 and 10.5 inclusive).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sanction_score
          in: query
          description: 'A URL parameter that specifies the range of sanction screening score. This format should be {from,to} (ie.sanction_score=0.1,10.5 means filtering transactions by sanction_score between 0.1 and 10.5 inclusive).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: protocol
          in: query
          description: filter transactions by transaction protocol
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Sygna_Bridge
                - Sygna_EmailProtocol
                - TRISA
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /data-transfer-export/download:
    get:
      tags:
        - data-transfer-export
      summary: download transactions report
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /data-transfer-export/status:
    get:
      tags:
        - data-transfer-export
      summary: get transaction report processing status
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/model.Report'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /global-vasp:
    get:
      tags:
        - global-vasp
      summary: get global-vasp
      description: only admin could get encrypted credentials
      parameters:
        - name: vasp_identifier
          in: query
          description: filter global vasp by vasp identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: vasp_name
          in: query
          description: filter global vasp data by vasp name
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: protocol
          in: query
          description: filter global vasp data by protocol
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Sygna_Bridge
                - Sygna_EmailProtocol
                - TRISA
                - VerifyVASP
                - 'Notabene_TR:NOW'
                - Veriscope on Shyft
        - name: 'extra_info[key]'
          in: query
          description: filter global vasp data by extra_info's key
          schema:
            type: string
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.GlobalVasp'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /oauth2:
    post:
      tags:
        - oauth2
      summary: get oauth token
      requestBody:
        description: post /oauth2 param
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/schema.PostOauthInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithStatus'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      x-codegen-request-body-name: body
    delete:
      tags:
        - oauth2
      summary: delete oauth token from database
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithStatus'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /ownerships:
    get:
      tags:
        - ownerships
      summary: the API would be used when you want to see a list of all validations
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.Ownership'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    post:
      tags:
        - ownerships
      summary: the API would be used when you want to validate an address whether belong to a user who owns private wallet
      parameters:
        - name: accept_high_risk
          in: query
          description: the validation would be sent even if the addresses are risky
          schema:
            type: boolean
      requestBody:
        description: post /ownerships params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostOwnershipInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /ownerships/cancel:
    patch:
      tags:
        - ownerships
      summary: you couldn't validate some address that it is processing or accepted until you cancel it
      requestBody:
        description: patch /ownerships/cancel params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchOwnershipIdInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /ownerships/confirm:
    patch:
      tags:
        - ownerships
      summary: the API would be used when you received a reply from the receiver and you want to accept or reject the reply
      requestBody:
        description: patch /ownerships/confirm params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchOwnershipConfirmInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /ownerships/resend:
    patch:
      tags:
        - ownerships
      summary: the API would be used when a receiver lets you send a email again
      requestBody:
        description: patch /ownerships/resend params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchOwnershipIdInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /ownerships/unblock:
    patch:
      tags:
        - ownerships
      summary: the API would be used when the validation that including risky address wouldn't be sent until you unblock it
      requestBody:
        description: patch /ownerships/unblock params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchOwnershipIdInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /ownerships/validate:
    patch:
      tags:
        - ownerships
      summary: the API would be used when you get the ownership identifier from the link that you received and want to reply to the validation
      requestBody:
        description: patch /ownerships/validate params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchOwnershipValidationInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  '/ownerships/verify-token/{token}':
    get:
      tags:
        - ownerships
      summary: the API would be used when you received a link that asks you to validate the address whether belong to you
      parameters:
        - name: token
          in: path
          description: JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: string
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  '/ownerships/{id}':
    get:
      tags:
        - ownerships
      summary: the API would be used when you want to see a validation detail
      parameters:
        - name: id
          in: path
          description: ownership identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/model.Ownership'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /rollback:
    get:
      tags:
        - rollback
      summary: get rollback
      description: only admin could get encrypted credentials
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.Rollback'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    put:
      tags:
        - rollback
      summary: update rollback
      description: only allow admin to use this method
      requestBody:
        description: put /rollback params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PutRollbackInout'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /services:
    get:
      tags:
        - services
      summary: get services
      description: only admin could get encrypted credentials
      parameters:
        - name: id
          in: query
          description: filter services by service identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: provider
          in: query
          description: filter services by provider
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Sygna_Bridge
                - Elliptic
                - Chainalysis V1
                - Chainalysis V2
                - ComplyAdvantage
                - Merkle Science
                - TRISA
                - Dow Jones
                - Coinfirm
        - name: type
          in: query
          description: filter services by type
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Travel Rule
                - Blockchain Analytics
                - Sanction Screening
        - name: is_active
          in: query
          description: filter services by if status is activated
          style: form
          explode: false
          schema:
            type: array
            items:
              type: boolean
        - name: status
          in: query
          description: filter services by status
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - activated
                - deactivated
                - disabled
                - upcoming
                - expired
        - name: start_time
          in: query
          description: 'filter services by a range of start time(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: end_time
          in: query
          description: 'filter services by a range of end time(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.Service'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    put:
      tags:
        - services
      summary: update services
      description: |-
        only allow admin to use this method
        use GET /services/supported to understand which credential is required by provider
      requestBody:
        description: put /services params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PutServicesInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
    post:
      tags:
        - services
      summary: create services
      description: |-
        only allow admin to use this method
        use GET /services/supported to understand which credential is required by provider
      requestBody:
        description: post /services params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostServicesInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /services/supported:
    get:
      tags:
        - services
      summary: get supported services and its config
      description: only allow admin to use this method
      parameters:
        - name: id
          in: query
          description: filter services by service identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: provider
          in: query
          description: filter services by provider
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Sygna_Bridge
                - Elliptic
                - Chainalysis V1
                - Chainalysis V2
                - ComplyAdvantage
                - Merkle Science
                - TRISA
                - Dow Jones
                - Coinfirm
        - name: type
          in: query
          description: filter services by type
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Travel Rule
                - Blockchain Analytics
                - Sanction Screening
        - name: is_active
          in: query
          description: filter services by if status is activated
          style: form
          explode: false
          schema:
            type: array
            items:
              type: boolean
        - name: editable
          in: query
          description: filter services by editable
          style: form
          explode: false
          schema:
            type: array
            items:
              type: boolean
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.SupportedService'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /settings:
    get:
      tags:
        - settings
      summary: get settings
      description: only admin could get encrypted credentials
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.Setting'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    put:
      tags:
        - settings
      summary: update settings
      description: only allow admin to use this method
      requestBody:
        description: put /settings params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostSettingInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
    post:
      tags:
        - settings
      summary: create settings
      description: only allow admin to use this method
      requestBody:
        description: post /settings params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostSettingInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /settings/default:
    get:
      tags:
        - settings
      summary: get default settings
      description: only allow admin to use this method
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/schema.PostSettingInput'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /settings/supported:
    get:
      tags:
        - settings
      summary: get supported settings
      description: only allow admin to use this method
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/model.SupportedSetting'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /transactions:
    get:
      tags:
        - transactions
      summary: get transactions
      parameters:
        - name: id
          in: query
          description: filter transactions by transaction identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          description: filter transactions by customer name
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: address
          in: query
          description: filter transactions by transaction address
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: tx_id
          in: query
          description: filter transactions by transaction id on blockchain
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: currency_id
          in: query
          description: filter transactions by transaction currency id
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: last_screened
          in: query
          description: 'filter transactions by a range of last screened(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: risk_score_provider
          in: query
          description: filter transactions by risk score provider
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: risk_score
          in: query
          description: 'A URL parameter that specifies the range of risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: status
          in: query
          description: 'filter transactions by transaction status(0:Processing,1:Blocked,2:Pending On Beneficiary,3:Transfer To Beneficiary Failed,4:Pending On Originator,5:Transfer To Originator Failed,6:Confirmed,7:Confirm Failed,8:Rejected)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: status_text
          in: query
          description: filter transactions by transaction status text
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Processing
                - Blocked
                - Pending On Beneficiary
                - Transfer To Beneficiary Failed
                - Pending On Originator
                - Transfer To Originator Failed
                - Confirmed
                - Confirm Failed
                - Rejected
        - name: value
          in: query
          description: 'A URL parameter that specifies the range of value. This format should be {from,to} (ie.value=0.1,10.5 means filtering transactions by value between 0.1 and 10.5 inclusive).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: sanction_score
          in: query
          description: 'A URL parameter that specifies the range of sanction screening score. This format should be {from,to} (ie.sanction_score=0.1,10.5 means filtering transactions by sanction_score between 0.1 and 10.5 inclusive).'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: protocol
          in: query
          description: filter transactions by transaction protocol
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Sygna_Bridge
                - Sygna_EmailProtocol
                - TRISA
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/schema.GetTransactionsOutput'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    post:
      tags:
        - transactions
      summary: create transactions
      requestBody:
        description: post /transactions params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/model.PostTransactionInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/email-protocol/deposits:
    post:
      tags:
        - transactions/email-protocol
      summary: send email to originator VASP and ask him to fill customer information
      description: only for email protocol
      requestBody:
        description: post /transactions/email-protocol/deposits params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/model.PostEmailProtocolDepositInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/email-protocol/deposits/permission:
    patch:
      tags:
        - transactions/email-protocol
      summary: accept or reject this transaction when received customer information from originator
      description: only for email protocol
      requestBody:
        description: patch /transactions/email-protocol/deposits/permission params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchPermissionInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/email-protocol/deposits/permission-request:
    patch:
      tags:
        - transactions/email-protocol
      summary: send own customer information to beneficiary or reject this request when received email from beneficiary
      description: only for email protocol
      requestBody:
        description: patch /transactions/email-protocol/deposits/permission-request params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostEmailProtocolPermissionInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/email-protocol/deposits/txid:
    patch:
      tags:
        - transactions/email-protocol
      summary: send transaction hash when received accept from beneficiary
      description: only for email protocol
      requestBody:
        description: patch /transactions/email-protocol/deposits/txid params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchTxIdInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/email-protocol/permission:
    post:
      tags:
        - transactions/email-protocol
      summary: send permission to originator from email protocol VASP
      description: only for email protocol
      requestBody:
        description: post /transactions/email-protocol/permission params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostEmailProtocolPermissionInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  '/transactions/email-protocol/verify-token/{token}':
    get:
      tags:
        - transactions/email-protocol
      summary: verify if token is valid and get its transaction identifier
      description: only for email protocol
      parameters:
        - name: token
          in: path
          description: JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: string
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
  /transactions/permission:
    patch:
      tags:
        - transactions
      summary: send permission to originator
      requestBody:
        description: patch /transactions/permission params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchPermissionInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/sanction-match:
    post:
      tags:
        - transactions
      summary: let user do sanction screening
      requestBody:
        description: post /transactions/sanction-match params
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/schema.PostSanctionMatchInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sanctionscreening.GetSanctionScoreOutput'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  '/transactions/sanction-report/{searchId}':
    get:
      tags:
        - transactions
      summary: get report from sanction screening service
      parameters:
        - name: searchId
          in: path
          description: an identifier from sanction screening service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: binary
          content:
            application/pdf:
              schema:
                type: integer
        '400':
          description: Bad Request
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /transactions/status:
    patch:
      tags:
        - transactions
      summary: unblock or cancel transactions
      requestBody:
        description: patch /transactions/status params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchTransactionsStatus'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/txid:
    patch:
      tags:
        - transactions
      summary: send transaction identifier on blockchain to beneficiary
      requestBody:
        description: patch /transactions/txid params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchTxIdInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /transactions/wallet-address-filter:
    post:
      tags:
        - transactions
      summary: use /wallet-address-filter from Sygna Bridge and use KYT service by own credential to get address information
      requestBody:
        description: post /transactions/wallet-address-filter params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostWalletAddressFilterInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/schema.PostWalletAddressFilterOutput'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  '/transactions/{id}':
    get:
      tags:
        - transactions
      summary: get specific transaction
      parameters:
        - name: id
          in: path
          description: transaction identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/schema.GetTransactionOutput'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /users:
    get:
      tags:
        - users
      summary: get all users
      description: only admin could use this method
      parameters:
        - name: id
          in: query
          description: filter users by identifier
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: role_id
          in: query
          description: 'filter users by role identifier(0:admin 1:member)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: account
          in: query
          description: filter users by login account
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: login_type
          in: query
          description: filter users by login type(only supported password and google now)
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - password
                - google
        - name: is_active
          in: query
          description: filter users by if status is activated
          style: form
          explode: false
          schema:
            type: array
            items:
              type: boolean
        - name: created_at
          in: query
          description: 'filter data by a range of created data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 'A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.'
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.'
          schema:
            type: integer
        - name: orderby
          in: query
          description: 'Specifies sequences to sort data (ie.orderby=id:desc)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: updated_at
          in: query
          description: 'filter data by a range of updated data(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/model.User'
                  schema.RespWithPaging:
                    $ref: '#/components/schemas/schema.RespWithPaging'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    post:
      tags:
        - users
      summary: create users
      description: only admin could use this method
      requestBody:
        description: post /users params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostUsersInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - users
      summary: get users audit history
      parameters:
        - name: id
          in: query
          description: filter users by identifier
          schema:
            type: string
        - name: created_at
          in: query
          description: 'filter transactions by a range of created time(ie. ''2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z'' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
    patch:
      tags:
        - users
      summary: activate or deactivate users(member)
      description: |-
        only admin could use this method
        all accounts would be logout if admin deactivated them
      requestBody:
        description: patch /users params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PatchUsersInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithMutation'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /users/change-password:
    patch:
      tags:
        - users
      summary: change login password
      description: |-
        admin or member only could change self password
        all accounts would be logout if one of users changed password
        user must use password to login if he want to change his password
      requestBody:
        description: patch /users/change-password params
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/schema.ChangePasswordInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithStatusAndMessage'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  /users/link:
    post:
      tags:
        - users
      summary: link your account to third party service
      description: admin or member could only link self account
      requestBody:
        description: post /users/link params
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/schema.PostUsersLinkInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithStatusAndMessage'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
  '/users/link/{login_type}':
    delete:
      tags:
        - users
      summary: unlink your account from third party service
      description: |-
        admin or member could only unlink self account
        all accounts which linked with specific third party service would be logout if one of users unlinked
      parameters:
        - name: login_type
          in: path
          description: login type which you want to unlink
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/schema.RespWithStatusAndMessage'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  '/users/{id}':
    get:
      tags:
        - users
      summary: get specific or self user data
      description: |-
        admin could get specific or self user data
        member could only get self user data
      parameters:
        - name: id
          in: path
          description: specific user identifier or 'self' to get self user data
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/model.User'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /vendors/bridge/sync:
    get:
      tags:
        - vendors
      summary: Synchronize Sygna Bridge Transactions
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /vendors/shyft/attestations/sync:
    get:
      tags:
        - vendors
      summary: Synchronize Shyft Attestations
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
  /vendors/test:
    post:
      tags:
        - vendors
      summary: test if third-party service is available
      description: |-
        only allow admin to use this method
        only support Sygna_Bridge,ComplyAdvantage,Elliptic,Chainalysis V1,Chainalysis V2,Merkle Science,TRISA,Dow Jones,Coinfirm for provider now
        only support Travel Rule,Blockchain Analytics,Sanction Screening for type now
      requestBody:
        description: post /vendors/test params
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/schema.PostVendorsTestInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/schema.PostVendorsTestOutput'
                  schema.Resp:
                    $ref: '#/components/schemas/schema.Resp'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/errors.SystemError'
      security:
        - BearerToken: []
      x-codegen-request-body-name: body
components:
  schemas:
    decimal.NullDecimal:
      type: object
      properties:
        decimal:
          type: number
        valid:
          type: boolean
    errors.SystemError:
      type: object
      properties:
        code:
          type: string
        extra_data:
          type: object
          properties: {}
        help:
          type: string
        message:
          type: string
        stack:
          type: object
          properties: {}
        type:
          type: string
    model.Addr:
      type: object
      properties:
        address:
          type: string
        extra_info:
          type: object
          properties: {}
    model.Address:
      type: object
      properties:
        address_line:
          type: array
          items:
            type: string
        address_type:
          type: string
        building_name:
          type: string
        building_number:
          type: string
        country:
          type: string
        country_sub_division:
          type: string
        department:
          type: string
        district_name:
          type: string
        floor:
          type: string
        post_box:
          type: string
        post_code:
          type: string
        room:
          type: string
        street_name:
          type: string
        sub_department:
          type: string
        town_location_name:
          type: string
        town_name:
          type: string
    model.Asset:
      type: object
      properties:
        address:
          type: string
        created_at:
          type: string
        currency_id:
          type: string
        currency_name:
          type: string
        currency_symbol:
          type: string
        extra_info:
          $ref: '#/components/schemas/model.StringObject'
        id:
          type: string
        is_kyt_supported:
          type: boolean
        is_sygna_supported:
          type: boolean
        labels:
          type: array
          items:
            type: string
        last_screened:
          type: string
        risk_score:
          type: string
        risk_score_provider:
          type: string
        updated_at:
          type: string
        value:
          $ref: '#/components/schemas/decimal.NullDecimal'
        value_usd:
          $ref: '#/components/schemas/decimal.NullDecimal'
    model.BeneficiaryPrivateInfo:
      type: object
      properties:
        natural_person_name:
          $ref: '#/components/schemas/model.NaturalPersonName'
    model.Birth:
      type: object
      properties:
        date_of_birth:
          type: string
        place_of_birth:
          type: string
    model.Currency:
      type: object
      properties:
        addr_extra_info:
          type: array
          items:
            type: string
        created_at:
          type: string
        currency_id:
          type: string
        currency_name:
          type: string
        currency_symbol:
          type: string
        is_active:
          type: boolean
        is_kyt_supported:
          type: boolean
        kyt_providers:
          type: array
          items:
            type: string
        platform:
          $ref: '#/components/schemas/model.Platform'
        updated_at:
          type: string
    model.GlobalVasp:
      type: object
      properties:
        created_at:
          type: string
        extra_info:
          $ref: '#/components/schemas/model.Object'
        id:
          type: string
        protocol:
          type: string
        updated_at:
          type: string
        vasp_identifier:
          type: string
        vasp_name:
          type: string
        vasp_server_status:
          type: string
    model.LegalPersonName:
      required:
        - name
      type: object
      properties:
        local_name:
          type: string
        name:
          type: string
        phonetic_name:
          type: string
    model.Login:
      type: object
      properties:
        account:
          type: string
        created_at:
          type: string
        id:
          type: string
        is_active:
          type: boolean
        last_login:
          type: string
        last_password_change:
          type: string
        login_type:
          type: string
        updated_at:
          type: string
    model.NameObject:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
    model.National:
      type: object
      properties:
        country_of_issue:
          type: string
        national_identifier:
          type: string
        national_identifier_type:
          type: string
        registration_authority:
          type: string
    model.NaturalPersonName:
      required:
        - name
      type: object
      properties:
        local_name:
          $ref: '#/components/schemas/model.NameObject'
        name:
          $ref: '#/components/schemas/model.NameObject'
        phonetic_name:
          $ref: '#/components/schemas/model.NameObject'
    model.Object:
      type: object
    model.Ownership:
      type: object
      properties:
        assets:
          type: array
          items:
            $ref: '#/components/schemas/model.OwnershipAsset'
        created_at:
          type: string
        error:
          $ref: '#/components/schemas/model.Object'
        id:
          type: string
        owner_email:
          type: string
        owner_info:
          type: object
          properties: {}
        sender_email:
          type: string
        status:
          type: integer
        status_text:
          type: string
        transaction_information:
          type: object
          properties: {}
        updated_at:
          type: string
    model.OwnershipAsset:
      type: object
      properties:
        address:
          type: string
        created_at:
          type: string
        currency_id:
          type: string
        currency_name:
          type: string
        currency_symbol:
          type: string
        id:
          type: string
        last_screened:
          type: string
        reject_code:
          type: string
        reject_message:
          type: string
        risk_score:
          type: string
        risk_score_provider:
          type: string
        txid:
          type: string
        updated_at:
          type: string
        validation_status:
          type: integer
        validation_status_text:
          type: string
        value:
          type: string
    model.Platform:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        symbol:
          type: string
        token_address:
          type: string
    model.PostEmailProtocolDepositInput:
      required:
        - currency_id
        - customer_id
        - originator
        - value
      type: object
      properties:
        beneficiary:
          type: object
          properties:
            addrs:
              type: array
              items:
                $ref: '#/components/schemas/model.Addr'
            assets:
              type: array
              items:
                type: string
        currency_id:
          type: string
        customer_id:
          type: string
        originator:
          type: object
          properties:
            addrs:
              type: array
              items:
                $ref: '#/components/schemas/model.Addr'
        value:
          type: string
    model.PostTransactionInput:
      required:
        - beneficiary
        - currency_id
        - customer_id
        - originator
        - value
      type: object
      properties:
        beneficiary:
          type: object
          properties:
            addrs:
              type: array
              items:
                $ref: '#/components/schemas/model.Addr'
            customer_type:
              type: integer
              description: |-
                Customer Type
                * 0 - NaturalPerson
                * 1 - LegalPerson
            private_info:
              $ref: '#/components/schemas/model.BeneficiaryPrivateInfo'
            vasp_code:
              type: string
        currency_id:
          type: string
          description: Choose target currency identifier from GET /currencies
        customer_id:
          type: string
          description: Choose target identifier from GET /customers
        expire_date:
          type: integer
        forced_sending_when_VASP_is_not_healthy:
          type: boolean
        need_validate_address:
          type: boolean
        originator:
          type: object
          properties:
            addrs:
              type: array
              items:
                $ref: '#/components/schemas/model.Addr'
            assets:
              type: array
              items:
                type: string
          description: 'Choose asset identifiers from GET /customers/:id or input addresses belong to above customer identifier'
        protocol:
          type: string
          nullable: true
          enum:
            - null
            - Sygna_Bridge
            - Sygna_EmailProtocol
            - TRISA
        protocol_extra_info:
          type: object
          properties: {}
        txid:
          type: string
        value:
          type: string
          description: The value of the currency requested to transfer.
    model.Report:
      type: object
      properties:
        created_at:
          type: string
        error:
          $ref: '#/components/schemas/model.Object'
        file_path:
          type: string
        id:
          type: string
        report_status:
          type: integer
        report_status_text:
          type: string
        updated_at:
          type: string
        vasp_code:
          type: string
    model.Rollback:
      type: object
      properties:
        gorm_version:
          type: string
        rollback_id:
          type: string
        sql_version:
          type: string
        version:
          type: string
    model.Service:
      type: object
      properties:
        created_at:
          type: string
        credential:
          type: object
          properties: {}
          description: this field is plain text
        end_time:
          type: string
        id:
          type: string
        is_active:
          type: boolean
        provider:
          type: string
        settings:
          type: object
          properties: {}
        start_time:
          type: string
        status:
          type: string
        type:
          type: string
        updated_at:
          type: string
        vasp_code:
          type: string
    model.Setting:
      type: object
      properties:
        created_at:
          type: string
        id:
          type: string
        rule:
          type: object
          properties: {}
        type:
          type: string
        updated_at:
          type: string
        vasp_code:
          type: string
    model.StringObject:
      type: object
      additionalProperties:
        type: string
    model.SupportedService:
      type: object
      properties:
        created_at:
          type: string
        credential:
          type: object
          properties: {}
        editable:
          type: boolean
        id:
          type: string
        is_active:
          type: boolean
        provider:
          type: string
        settings:
          type: object
          properties: {}
        type:
          type: string
        updated_at:
          type: string
    model.SupportedSetting:
      type: object
      properties:
        created_at:
          type: string
        id:
          type: string
        rule:
          type: object
          properties: {}
        type:
          type: string
        updated_at:
          type: string
    model.User:
      type: object
      properties:
        created_at:
          type: string
        id:
          type: string
        is_active:
          type: boolean
        logins:
          type: array
          items:
            $ref: '#/components/schemas/model.Login'
        role_id:
          type: integer
        updated_at:
          type: string
    sanctionscreening.GetSanctionScoreOutput:
      type: object
      properties:
        profile_ids:
          type: array
          items:
            type: string
        score:
          type: integer
    schema.Address:
      type: object
      properties:
        address_line:
          type: array
          items:
            type: string
        address_type:
          type: string
        building_name:
          type: string
        building_number:
          type: string
        country:
          type: string
        country_sub_division:
          type: string
        department:
          type: string
        district_name:
          type: string
        floor:
          type: string
        post_box:
          type: string
        post_code:
          type: string
        room:
          type: string
        street_name:
          type: string
        sub_department:
          type: string
        town_location_name:
          type: string
        town_name:
          type: string
    schema.Asset:
      type: object
      properties:
        address:
          type: string
        created_at:
          type: string
        currency_id:
          type: string
        extra_info:
          type: object
          properties: {}
        id:
          type: string
        labels:
          type: array
          items:
            type: string
        last_screened:
          type: string
        risk_score:
          type: string
        risk_score_provider:
          type: string
        updated_at:
          type: string
        value:
          type: string
        value_usd:
          type: string
    schema.ChangePasswordInput:
      required:
        - new_password
        - old_password
      type: object
      properties:
        new_password:
          type: string
          description: |-
            new password must be follow below rules:
            at least 6 letters
            at least 1 number
            at least 1 upper case
            at least 1 special character
        old_password:
          type: string
    schema.DateAndPlaceOfBirth:
      type: object
      properties:
        date_of_birth:
          type: string
        place_of_birth:
          type: string
    schema.DeleteUsersInput:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: specific user identifier
    schema.GetCustomerOutput:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/schema.Address'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/schema.Asset'
        avg_risk_score:
          type: string
        birth:
          $ref: '#/components/schemas/schema.DateAndPlaceOfBirth'
        country:
          type: string
        created_at:
          type: string
        customer_id:
          type: string
        customer_type:
          type: integer
        id:
          type: string
        is_active:
          type: boolean
        labels:
          type: array
          items:
            type: string
        last_screened:
          type: string
        max_risk_score:
          type: string
        name:
          type: string
        national:
          $ref: '#/components/schemas/schema.NationalIdentification'
        protocol_extra_info:
          type: object
          properties: {}
        risk_score_provider:
          type: string
        updated_at:
          type: string
    schema.GetCustomersOutput:
      type: object
      properties:
        avg_risk_score:
          type: string
        created_at:
          type: string
        customer_id:
          type: string
          description: 'Name              string                  `json:"name"`'
        id:
          type: string
        is_active:
          type: boolean
        labels:
          type: array
          items:
            type: string
        last_screened:
          type: string
        legal_person_name:
          $ref: '#/components/schemas/model.LegalPersonName'
        max_risk_score:
          type: string
        natural_person_name:
          $ref: '#/components/schemas/model.NaturalPersonName'
        risk_score_provider:
          type: string
        updated_at:
          type: string
    schema.GetRootOutput:
      type: object
      properties:
        release:
          type: string
        version:
          type: string
    schema.GetTransactionOutput:
      required:
        - created_at
        - currency_id
        - direction
        - id
        - protocol
        - status
        - status_text
        - updated_at
        - value
      type: object
      properties:
        created_at:
          type: string
        currency_id:
          type: string
        customer:
          $ref: '#/components/schemas/schema.GetCustomerOutput'
        direction:
          type: integer
        high_risk:
          type: boolean
          description: |-
            if your KYT service is Elliptic, high_risk would be true when maximum risk score of address in this transaction is greater than score which is mantain in /services ;
            if your KYT service is Chainalysis, high_risk would be true when one of addresses is high in result which scanned by Chainalysis
            if sanction_score is greater than 0, high_risk would be true
        id:
          type: string
        max_risk_score:
          type: string
        protocol:
          type: string
          description: The default is Sygna_Bridge
        risk_score_provider:
          type: string
        sanction_report_link:
          type: string
          description: 'sanction_report_link would be valuable if sanction screening service is enabled, it provides a report to download'
        sanction_score:
          type: integer
          description: sanction_score would be valuable if sanction screening service is enabled
        status:
          type: integer
        status_text:
          type: string
        transaction_asset:
          $ref: '#/components/schemas/schema.TransactionAsset'
        transfer_id:
          type: string
        tx_id:
          type: string
        updated_at:
          type: string
        value:
          type: string
        value_usd:
          type: string
    schema.GetTransactionsOutput:
      type: object
      properties:
        address:
          type: string
        created_at:
          type: string
        currency_id:
          type: string
        currency_name:
          type: string
        currency_symbol:
          type: string
        customer_id:
          type: string
          description: 'Name                  string                      `json:"name,omitempty"`'
        direction:
          type: integer
        expire_date:
          type: string
        id:
          type: string
        labels:
          type: array
          items:
            type: string
        last_screened:
          type: string
        legal_person_name:
          $ref: '#/components/schemas/model.LegalPersonName'
        natural_person_name:
          $ref: '#/components/schemas/model.NaturalPersonName'
        protocol:
          type: string
        protocol_extra_info:
          $ref: '#/components/schemas/model.Object'
        risk_score:
          type: string
        risk_score_provider:
          type: string
        sanction_score:
          type: integer
        sanction_score_provider:
          type: string
        status:
          type: integer
        status_text:
          type: string
        transfer_id:
          type: string
        tx_id:
          type: string
        value:
          type: string
        value_usd:
          type: string
          description: only used in response
    schema.LegalPersonName:
      type: object
      properties:
        local_name:
          type: string
        name:
          type: string
        phonetic_name:
          type: string
    schema.NameObject:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
    schema.NationalIdentification:
      type: object
      properties:
        country_of_issue:
          type: string
        national_identifier:
          type: string
        national_identifier_type:
          type: string
        registration_authority:
          type: string
    schema.NaturalPersonName:
      type: object
      properties:
        local_name:
          $ref: '#/components/schemas/schema.NameObject'
        name:
          $ref: '#/components/schemas/schema.NameObject'
        phonetic_name:
          $ref: '#/components/schemas/schema.NameObject'
    schema.PagingResult:
      required:
        - has_next
        - limit
        - offset
        - total
      type: object
      properties:
        has_next:
          type: boolean
        limit:
          type: integer
        next_offset:
          type: integer
          description: next_offset is valuable when has_next is true
        offset:
          type: integer
        total:
          type: integer
    schema.PatchAssetInput:
      required:
        - id
      type: object
      properties:
        address:
          type: string
        currency_id:
          type: string
        extra_info:
          type: object
        id:
          type: string
          format: uuid
        value:
          type: string
    schema.PatchCustomersInput:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/model.Address'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/model.Asset'
        assets_ignore_kyt:
          type: boolean
        birth:
          $ref: '#/components/schemas/model.Birth'
        country:
          type: string
        customer_id:
          type: string
        customer_type:
          type: integer
        id:
          type: string
        is_active:
          type: boolean
        legal_person_name:
          $ref: '#/components/schemas/schema.LegalPersonName'
        national:
          $ref: '#/components/schemas/model.National'
        natural_person_name:
          $ref: '#/components/schemas/schema.NaturalPersonName'
        update_status:
          type: boolean
    schema.PatchOwnershipAssetValidationAcceptInput:
      required:
        - id
        - txid
      type: object
      properties:
        id:
          type: string
          description: Target asset identifier which you want to accept
          format: uuid
        txid:
          type: string
          description: Transaction identifier on blockchain
    schema.PatchOwnershipAssetValidationConfirmInput:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Target asset identifier which you want to accept
          format: uuid
    schema.PatchOwnershipAssetValidationRejectInput:
      required:
        - id
        - reject_code
        - reject_message
      type: object
      properties:
        id:
          type: string
          description: Target asset identifier which you want to accept
          format: uuid
        reject_code:
          type: string
          description: 'Reply with [BVRC](ref:beneficiary-vasp-rejected-code).'
          enum:
            - BVRC001
            - BVRC002
            - BVRC003
            - BVRC004
            - BVRC005
            - BVRC006
            - BVRC007
            - BVRC999
        reject_message:
          type: string
          description: Reply detail why you reject.
    schema.PatchOwnershipConfirmInput:
      required:
        - id
      type: object
      properties:
        accept:
          type: array
          items:
            $ref: '#/components/schemas/schema.PatchOwnershipAssetValidationConfirmInput'
        id:
          type: string
          description: Target ownership identifier
          format: uuid
        reject:
          type: array
          items:
            $ref: '#/components/schemas/schema.PatchOwnershipAssetValidationRejectInput'
    schema.PatchOwnershipIdInput:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Target ownership identifier
          format: uuid
    schema.PatchOwnershipValidationInput:
      type: object
      properties:
        accept:
          type: array
          items:
            $ref: '#/components/schemas/schema.PatchOwnershipAssetValidationAcceptInput'
        owner_info:
          type: object
          properties: {}
        reject:
          type: array
          items:
            $ref: '#/components/schemas/schema.PatchOwnershipAssetValidationRejectInput'
    schema.PatchPermissionInput:
      required:
        - id
        - permission_status
      type: object
      properties:
        forced_sending_when_VASP_is_not_healthy:
          type: boolean
        id:
          type: string
          description: Target transaction identifier which status is Pending On Beneficiary
          format: uuid
        permission_status:
          type: integer
          description: 'Status of the transfer permission, 0 for accept, 1 for reject'
        reject_code:
          type: string
          description: 'Only required when the permission_status is REJECTED, reply with [BVRC](ref:beneficiary-vasp-rejected-code).'
          enum:
            - BVRC001
            - BVRC002
            - BVRC003
            - BVRC004
            - BVRC005
            - BVRC006
            - BVRC007
            - BVRC999
        reject_message:
          type: string
          description: 'Only required when the permission_status is REJECTED and reject_code is ''BVRC999'', reply with [BVRC](ref:beneficiary-vasp-rejected-code).'
    schema.PatchTransactionsStatus:
      required:
        - action
        - id
      type: object
      properties:
        action:
          type: integer
        id:
          type: string
          format: uuid
    schema.PatchTxIdInput:
      required:
        - id
        - txid
      type: object
      properties:
        id:
          type: string
          description: Target transaction identifier which status is Pending On Originator
          format: uuid
        txid:
          type: string
          description: Transaction identifier on blockchain
    schema.PatchUsersInput:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: specific user identifier
        is_active:
          type: boolean
        role_id:
          type: integer
    schema.PostAssetInput:
      required:
        - address
        - currency_id
      type: object
      properties:
        address:
          type: string
        currency_id:
          type: string
        extra_info:
          type: object
          properties: {}
        value:
          type: string
    schema.PostCustomersInput:
      required:
        - assets
        - country
        - customer_type
      type: object
      properties:
        address:
          $ref: '#/components/schemas/schema.Address'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/schema.PostAssetInput'
        assets_ignore_kyt:
          type: boolean
        birth:
          $ref: '#/components/schemas/schema.DateAndPlaceOfBirth'
        country:
          type: string
        customer_id:
          type: string
        customer_type:
          type: integer
          description: |-
            Customer Type
            * 0 - NaturalPerson
            * 1 - LegalPerson
        legal_person_name:
          $ref: '#/components/schemas/model.LegalPersonName'
        national:
          $ref: '#/components/schemas/schema.NationalIdentification'
        natural_person_name:
          $ref: '#/components/schemas/model.NaturalPersonName'
    schema.PostEmailProtocolPermissionInput:
      required:
        - id
        - permission_status
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/schema.PostCustomersInput'
        forced_sending_when_VASP_is_not_healthy:
          type: boolean
        id:
          type: string
          description: Target transaction identifier which status is Pending On Beneficiary
          format: uuid
        permission_status:
          type: integer
          description: 'Status of the transfer permission, 0 for accept, 1 for reject'
        reject_code:
          type: string
          description: 'Only required when the permission_status is REJECTED, reply with [BVRC](ref:beneficiary-vasp-rejected-code).'
          enum:
            - BVRC001
            - BVRC002
            - BVRC003
            - BVRC004
            - BVRC005
            - BVRC006
            - BVRC007
            - BVRC999
        reject_message:
          type: string
          description: 'Only required when the permission_status is REJECTED and reject_code is ''BVRC999'', reply with [BVRC](ref:beneficiary-vasp-rejected-code).'
    schema.PostOauthInput:
      required:
        - account
        - credential
      type: object
      properties:
        account:
          type: string
        credential:
          type: string
        login_type:
          type: string
          enum:
            - password
            - google
    schema.PostOwnershipInput:
      required:
        - owner_email
        - private_wallet_address
        - transaction_information
      type: object
      properties:
        assets_ignore_kyt:
          type: boolean
        owner_email:
          type: string
          format: email
        private_wallet_address:
          type: array
          items:
            type: string
        sender_email:
          type: string
          format: email
        transaction_information:
          $ref: '#/components/schemas/schema.PostOwnershipTransactionInformationInput'
    schema.PostOwnershipTransactionInformationInput:
      required:
        - currency_id
        - value
        - vasp_beneficiary_wallet_address
      type: object
      properties:
        currency_id:
          type: string
        value:
          type: string
        vasp_beneficiary_wallet_address:
          type: string
    schema.PostSanctionMatchInput:
      required:
        - customer_type
        - name
      type: object
      properties:
        customer_type:
          type: integer
        name:
          type: string
    schema.PostServicesInput:
      required:
        - credential
        - provider
        - type
      type: object
      properties:
        credential:
          type: object
          properties: {}
        provider:
          type: string
          enum:
            - Elliptic
            - Chainalysis V1
            - Chainalysis V2
            - ComplyAdvantage
            - Merkle Science
            - TRISA
            - Sygna_Bridge
            - Dow Jones
            - Coinfirm
        type:
          type: string
          enum:
            - Blockchain Analytics
            - Sanction Screening
            - Travel Rule
    schema.PostSettingInput:
      required:
        - rule
        - type
      type: object
      properties:
        rule:
          type: object
          properties: {}
        type:
          type: string
          enum:
            - blockchain_analytics_timing
            - sanction_screening_timing
    schema.PostUsersInput:
      required:
        - account
      type: object
      properties:
        account:
          type: string
          description: account should be valid email address
        email_pw_to_user:
          type: boolean
          description: email_pw_to_user is optional and its default value is true.
        password:
          type: string
          description: |-
            password is optional and it is generated if password is empty.
            password must be follow below rules:
            at least 6 letters
            at least 1 number
            at least 1 upper case
            at least 1 special character
        role_id:
          type: integer
          description: |-
            role_id
            * 0 - admin
            * 1 - member
            role_id is optional and its default value is 1(member).
            notice: admin could not be created if there is admin in VASP.
    schema.PostUsersLinkInput:
      required:
        - account
        - login_type
      type: object
      properties:
        account:
          type: string
          description: your account of third party service
        credential:
          type: string
          description: your credential of third party service and it would be used to validate if your account is valid
        login_type:
          type: string
          description: |-
            third party service name
            only google is supported now
    schema.PostVendorsTestInput:
      required:
        - credential
        - provider
        - type
      type: object
      properties:
        credential:
          type: object
          properties: {}
        provider:
          type: string
          enum:
            - Sygna_Bridge
            - Elliptic
            - Chainalysis
            - ComplyAdvantage
            - Merkle Science
            - TRISA
            - Dow Jones
            - Coinfirm
        type:
          type: string
          enum:
            - Travel Rule
            - Blockchain Analytics
            - Sanction Screening
    schema.PostVendorsTestOutput:
      required:
        - provider
        - status_code
        - type
      type: object
      properties:
        error_message:
          type: string
        fields:
          type: array
          items:
            type: string
        provider:
          type: string
        status_code:
          type: integer
        type:
          type: string
    schema.PostWalletAddressFilterInput:
      required:
        - addrs
        - currency_id
      type: object
      properties:
        addrs:
          type: array
          description: addresses which are searching information by Sygna Bridge
          items:
            type: string
        currency_id:
          type: string
          description: choose target currency identifier from GET /currencies
    schema.PostWalletAddressFilterOutput:
      type: object
      properties:
        address:
          type: string
        currency_id:
          type: string
        error:
          $ref: '#/components/schemas/errors.SystemError'
        extra_data:
          $ref: '#/components/schemas/types.H'
        is_vasp:
          type: boolean
          description: is_vasp indicates whether address belongs VASP
        success:
          type: boolean
        type:
          type: string
          description: which type address belongs
          enum:
            - SYGNA_VASP
            - UNKNOWN
            - FAILED
            - OTHER_VASP
            - PRIVATE_WALLET
    schema.PutCustomersInput:
      required:
        - assets
        - country
        - customer_type
        - id
        - is_active
      type: object
      properties:
        address:
          $ref: '#/components/schemas/schema.Address'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/schema.PatchAssetInput'
        assets_ignore_kyt:
          type: boolean
        birth:
          $ref: '#/components/schemas/schema.DateAndPlaceOfBirth'
        country:
          type: string
        customer_id:
          type: string
        customer_type:
          type: integer
          description: |-
            Customer Type
            * 0 - NaturalPerson
            * 1 - LegalPerson
        id:
          type: string
          format: uuid
        is_active:
          type: boolean
        legal_person_name:
          $ref: '#/components/schemas/model.LegalPersonName'
        national:
          $ref: '#/components/schemas/schema.NationalIdentification'
        natural_person_name:
          $ref: '#/components/schemas/model.NaturalPersonName'
    schema.PutRollbackInout:
      required:
        - version
      type: object
      properties:
        version:
          type: string
    schema.PutServicesInput:
      required:
        - credential
        - is_active
        - provider
        - type
      type: object
      properties:
        credential:
          type: object
          properties: {}
        is_active:
          type: boolean
        provider:
          type: string
          enum:
            - Elliptic
            - Chainalysis V1
            - Chainalysis V2
            - ComplyAdvantage
            - Merkle Science
            - TRISA
            - Sygna_Bridge
            - Dow Jones
            - Coinfirm
        settings:
          type: object
          properties: {}
        type:
          type: string
          enum:
            - Blockchain Analytics
            - Sanction Screening
            - Travel Rule
    schema.Resp:
      type: object
      properties:
        data:
          type: object
          properties: {}
    schema.RespWithMutation:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            required:
              - success
            type: object
            properties:
              error:
                $ref: '#/components/schemas/errors.SystemError'
              id:
                type: string
                format: uuid
              success:
                type: boolean
    schema.RespWithPaging:
      type: object
      properties:
        data:
          type: object
          properties: {}
        paging:
          $ref: '#/components/schemas/schema.PagingResult'
    schema.RespWithStatus:
      required:
        - data
      type: object
      properties:
        data:
          required:
            - success
          type: object
          properties:
            success:
              type: boolean
    schema.RespWithStatusAndMessage:
      required:
        - data
      type: object
      properties:
        data:
          required:
            - message
            - success
          type: object
          properties:
            message:
              type: string
              example: something
            success:
              type: boolean
    schema.TransactionAsset:
      required:
        - id
      type: object
      properties:
        address:
          type: string
        created_at:
          type: string
        extra_info:
          type: object
          properties: {}
        id:
          type: string
        labels:
          type: array
          items:
            type: string
        last_screened:
          type: string
        risk_score:
          type: string
        risk_score_provider:
          type: string
    types.H:
      type: object
    combined:
      anyOf:
        - $ref: '#/components/schemas/model.Address'
        - $ref: '#/components/schemas/model.Birth'
      description: ''
  securitySchemes:
    BearerToken:
      type: apiKey
      name: Authorization
      in: header
